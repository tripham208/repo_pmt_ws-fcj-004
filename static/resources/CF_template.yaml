Resources:
  rawBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-raw-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  rawBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref rawBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt rawBucket.Arn
              - !Sub ${rawBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  curatedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-curated-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  curatedBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref curatedBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt curatedBucket.Arn
              - !Sub ${curatedBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  standardizeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-standardize-${AWS::AccountId}-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  standardizeBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref standardizeBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt standardizeBucket.Arn
              - !Sub ${standardizeBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  curatedDatabase:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: pmt_curated
      CatalogId: !Ref AWS::AccountId
  standardizeDatabase:
    Type: AWS::Glue::Database
    Properties:
      DatabaseInput:
        Name: pmt_standardize
      CatalogId: !Ref AWS::AccountId
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: S3 bucket
      Members:
        - rawBucket
        - curatedBucket
        - standardizeBucket
    Group2:
      Label: Glue Database
      Members:
        - curatedDatabase
        - standardizeDatabase